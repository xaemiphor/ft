on:
  workflow_dispatch:
    inputs:
      target_date:
        description: '[yyyy-mm-dd] Used to identify the month to compile data about'
        required: false
        default: '2024-12-01'
      exchange:
        description: 'Specify one or more exchanges to pull. csv'
        required: false
        default: ''
  repository_dispatch:
    type:
      - last_month

  push:
    paths:
      - .github/workflows/download-data.yml
      - backtest_config/*
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write
  repository-projects: read

jobs:
  download-data:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.exchange }}-${{ github.event.client_payload.target_date || github.event.inputs.target_date || 'now' }}
      cancel-in-progress: false
    strategy:
      fail-fast: false
      matrix:
        include:
          - exchange: binanceus
            pairs: ".*/USDT"
            timeframes: '1m 3m 5m 15m 30m 1h 2h 4h 6h 8h 12h 1d 3d 1w 1M'
          - exchange: bitcoincom
            pairs: ".*/USDT"
            timeframes: '1m 3m 5m 15m 30m 1h 4h 1d 1w 1M'
          #- exchange: bitmart
          #  pairs: ".*/USDT"
          #  timeframes: '1m 3m 5m 15m 30m 45m 1h 2h 3h 4h 1d 1w 1M'
          - exchange: coinbase
            pairs: ".*/USD"
            timeframes: '1m 5m 15m 30m 1h 2h 6h 1d'
          - exchange: kraken
            pairs: ".*/USDT .*/USD"
            timeframes: '1m 5m 15m 30m 1h 4h 1d 1w 2w'
            extra: '--dl-trades'
          - exchange: kucoin
            pairs: ".*/USDT"
            timeframes: '1m 3m 5m 15m 30m 1h 2h 4h 6h 8h 12h 1d 1w 1M'
          - exchange: okx
            pairs: ".*/USDT"
            timeframes: '1m 3m 5m 15m 30m 1h 2h 4h 6h 12h 1d 1w 1M 3M'
    steps:
      - id: info
        if: github.event.inputs.exchange == '' || github.event.inputs.exchange == matrix.exchange
        shell: bash
        run: |
          TARGET_DATE=$(date -u +'%F' -d "${{ github.event.client_payload.target_date || github.event.inputs.target_date || 'now' }}")
          TARGET_MONTH=$(date -u +'%Y%m' -d "${TARGET_DATE}")
          END_MONTH=$(date -u +'%Y%m' -d "${TARGET_DATE} + 1 month")
          echo "target=${TARGET_MONTH}" | tee -a ${GITHUB_OUTPUT}
          echo "end=${END_MONTH}" | tee -a ${GITHUB_OUTPUT}
          mkdir -p user_data/data

      - name: Git checkout
        if: github.event.inputs.exchange == '' || github.event.inputs.exchange == matrix.exchange
        uses: actions/checkout@main
        with:
          fetch-depth: 1
          path: user_data

      - name: Git checkout
        if: github.event.inputs.exchange == '' || github.event.inputs.exchange == matrix.exchange
        uses: actions/checkout@main
        continue-on-error: true
        with:
          fetch-depth: 1
          ref: "data/${{ matrix.exchange }}/${{ steps.info.outputs.target }}"
          path: user_data/data/${{ matrix.exchange }}-${{ steps.info.outputs.target }}

      - id: get-data
        if: github.event.inputs.exchange == '' || github.event.inputs.exchange == matrix.exchange
        shell: bash
        continue-on-error: true
        timeout-minutes: 240
        run: |
          echo "::group::Preload docker image"
          docker pull freqtradeorg/freqtrade:stable
          echo "::endgroup::"
          function freqtrade {
            docker run --rm -v "./user_data:/freqtrade/user_data" freqtradeorg/freqtrade:stable $@
          }
          echo "::group::Download target month"
          freqtrade download-data --exchange ${{ matrix.exchange }} --pairs ${{ matrix.pairs }} --timeframes ${{ matrix.timeframes }} --timerange ${{ steps.info.outputs.target }}01-${{ steps.info.outputs.end }}01 --datadir user_data/data/${{ matrix.exchange }}-${{ steps.info.outputs.target }} -c user_data/backtest_config/${{ matrix.exchange }}.json -c user_data/backtest_config/common.json ${{ matrix.extra || '' }}
          echo "::endgroup::"

      - name: Push changes
        if: github.event.inputs.exchange == '' || github.event.inputs.exchange == matrix.exchange
        shell: bash
        run: |
          OPWD=$(pwd)
          set -x
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          for batch in '${{ steps.info.outputs.target }}'; do
            sudo chown -R $(id -u):$(id -g) user_data/data/${{ matrix.exchange }}-${batch}
            cd user_data/data/${{ matrix.exchange }}-${batch}
            if [[ $(git status --porcelain . | wc -l) -gt 0 ]]; then
              git add .
              git commit -m "ci: Autoupdate $(date -u +'%F %T')"
              git push -u origin "$(git branch --show-current):data/${{ matrix.exchange }}/${batch}"
            fi
            cd ${OPWD}
          done
  dispatch:
    runs-on: ubuntu-latest
    needs: [download-data]
    if: github.event.schedule == '0 0 * * *'
    steps:
      - id: info
        shell: bash
        run: |
          TODAY_MONTH=$(date -u +'%Y-%m')
          YESTERDAY_MONTH=$(date -u +'%Y-%m' -d '-5 days')
          if [[ "${TODAY_MONTH}" != "${YESTERDAY_MONTH}" ]]; then
            echo "eom=true" | tee -a ${GITHUB_OUTPUT}
          else
            echo "eom=false" | tee -a ${GITHUB_OUTPUT}
          fi
          echo "target=${YESTERDAY_MONTH}" | tee -a ${GITHUB_OUTPUT}
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@main
        if: steps.info.outputs.oem == 'true'
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          event-type: last_month
          client-payload: '{"target_date": "${{ steps.info.outputs.target }}-01"}'

